// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Routes should render with success 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Routes>
    <HashRouter>
      <Router
        history={
          Object {
            "action": "POP",
            "block": [Function],
            "createHref": [Function],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          }
        }
      >
        <Switch>
          <Route
            component={[Function]}
            computedMatch={
              Object {
                "isExact": true,
                "params": Object {},
                "path": "/",
                "url": "/",
              }
            }
            exact={true}
            location={
              Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              }
            }
            path="/"
          >
            <Home
              history={
                Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                }
              }
              location={
                Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                }
              }
              match={
                Object {
                  "isExact": true,
                  "params": Object {},
                  "path": "/",
                  "url": "/",
                }
              }
            >
              <div
                className="HomePage"
              >
                <div
                  className="mainContainer"
                >
                  <Row
                    tag="div"
                  >
                    <div
                      className="row"
                    >
                      <Col
                        lg={6}
                        sm={12}
                        tag="div"
                        widths={
                          Array [
                            "xs",
                            "sm",
                            "md",
                            "lg",
                            "xl",
                          ]
                        }
                        xl={8}
                      >
                        <div
                          className="col-sm-12 col-lg-6 col-xl-8"
                        >
                          <h1
                            className="welcome first"
                          >
                            Commits List
                          </h1>
                          <RootCommits>
                            <Commits
                              commits={Array []}
                            >
                              <div
                                className="commits"
                              >
                                <If
                                  condition={false}
                                >
                                  <Else>
                                    <Alert
                                      closeAriaLabel="Close"
                                      color="info"
                                      fade={true}
                                      isOpen={true}
                                      tag="div"
                                      transition={
                                        Object {
                                          "appear": true,
                                          "baseClass": "fade",
                                          "baseClassActive": "show",
                                          "enter": true,
                                          "exit": true,
                                          "in": true,
                                          "mountOnEnter": false,
                                          "onEnter": [Function],
                                          "onEntered": [Function],
                                          "onEntering": [Function],
                                          "onExit": [Function],
                                          "onExited": [Function],
                                          "onExiting": [Function],
                                          "tag": "div",
                                          "timeout": 150,
                                          "unmountOnExit": true,
                                        }
                                      }
                                    >
                                      <Fade
                                        appear={true}
                                        baseClass="fade"
                                        baseClassActive="show"
                                        className="alert alert-info"
                                        enter={true}
                                        exit={true}
                                        in={true}
                                        mountOnEnter={false}
                                        onEnter={[Function]}
                                        onEntered={[Function]}
                                        onEntering={[Function]}
                                        onExit={[Function]}
                                        onExited={[Function]}
                                        onExiting={[Function]}
                                        role="alert"
                                        tag="div"
                                        timeout={150}
                                        unmountOnExit={true}
                                      >
                                        <Transition
                                          appear={true}
                                          enter={true}
                                          exit={true}
                                          in={true}
                                          mountOnEnter={false}
                                          onEnter={[Function]}
                                          onEntered={[Function]}
                                          onEntering={[Function]}
                                          onExit={[Function]}
                                          onExited={[Function]}
                                          onExiting={[Function]}
                                          timeout={150}
                                          unmountOnExit={true}
                                        >
                                          <div
                                            className="alert alert-info fade"
                                            role="alert"
                                          >
                                            No Commits tracked until now
                                          </div>
                                        </Transition>
                                      </Fade>
                                    </Alert>
                                  </Else>
                                </If>
                              </div>
                            </Commits>
                          </RootCommits>
                        </div>
                      </Col>
                      <Col
                        tag="div"
                        widths={
                          Array [
                            "xs",
                            "sm",
                            "md",
                            "lg",
                            "xl",
                          ]
                        }
                      >
                        <div
                          className="col"
                        >
                          <h1
                            className="welcome"
                          >
                            <Octicon
                              className="giticon"
                              icon={[Function]}
                              size={35}
                              verticalAlign="middle"
                            >
                              <svg
                                aria-hidden="true"
                                className="giticon"
                                height={35}
                                role="img"
                                style={
                                  Object {
                                    "display": "inline-block",
                                    "fill": "currentColor",
                                    "userSelect": "none",
                                    "verticalAlign": "middle",
                                  }
                                }
                                viewBox="0 0 16 16"
                                width={35}
                              >
                                <MarkGithub>
                                  <path
                                    d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z"
                                    fillRule="evenodd"
                                  />
                                </MarkGithub>
                              </svg>
                            </Octicon>
                            Repositories
                          </h1>
                          <Repository>
                            <div
                              className="repositories"
                            >
                              <Form
                                onSubmit={[Function]}
                                tag="form"
                              >
                                <form
                                  className=""
                                  onSubmit={[Function]}
                                >
                                  <Row
                                    tag="div"
                                  >
                                    <div
                                      className="row"
                                    >
                                      <Col
                                        lg={8}
                                        sm={4}
                                        tag="div"
                                        widths={
                                          Array [
                                            "xs",
                                            "sm",
                                            "md",
                                            "lg",
                                            "xl",
                                          ]
                                        }
                                        xl={8}
                                      >
                                        <div
                                          className="col-sm-4 col-lg-8 col-xl-8"
                                        >
                                          <FormGroup
                                            tag="div"
                                          >
                                            <div
                                              className="form-group"
                                            >
                                              <Label
                                                tag="label"
                                                widths={
                                                  Array [
                                                    "xs",
                                                    "sm",
                                                    "md",
                                                    "lg",
                                                    "xl",
                                                  ]
                                                }
                                              >
                                                <label
                                                  className=""
                                                >
                                                  User/Repository
                                                </label>
                                              </Label>
                                              <Input
                                                onChange={[Function]}
                                                placeholder="kevenleone/graphscript"
                                                type="text"
                                                value=""
                                              >
                                                <input
                                                  className="form-control"
                                                  onChange={[Function]}
                                                  placeholder="kevenleone/graphscript"
                                                  type="text"
                                                  value=""
                                                />
                                              </Input>
                                            </div>
                                          </FormGroup>
                                        </div>
                                      </Col>
                                      <Col
                                        className="register"
                                        tag="div"
                                        widths={
                                          Array [
                                            "xs",
                                            "sm",
                                            "md",
                                            "lg",
                                            "xl",
                                          ]
                                        }
                                      >
                                        <div
                                          className="register col"
                                        >
                                          <Button
                                            color="primary"
                                            disabled={true}
                                            tag="button"
                                          >
                                            <button
                                              aria-label={null}
                                              className="btn btn-primary disabled"
                                              disabled={true}
                                              onClick={[Function]}
                                            >
                                              Register
                                            </button>
                                          </Button>
                                        </div>
                                      </Col>
                                    </div>
                                  </Row>
                                </form>
                              </Form>
                              <Row
                                tag="div"
                              >
                                <div
                                  className="row"
                                >
                                  <If
                                    condition={false}
                                  >
                                    <Else>
                                      <Col
                                        tag="div"
                                        widths={
                                          Array [
                                            "xs",
                                            "sm",
                                            "md",
                                            "lg",
                                            "xl",
                                          ]
                                        }
                                      >
                                        <div
                                          className="col"
                                        >
                                          <Alert
                                            closeAriaLabel="Close"
                                            color="info"
                                            fade={true}
                                            isOpen={true}
                                            tag="div"
                                            transition={
                                              Object {
                                                "appear": true,
                                                "baseClass": "fade",
                                                "baseClassActive": "show",
                                                "enter": true,
                                                "exit": true,
                                                "in": true,
                                                "mountOnEnter": false,
                                                "onEnter": [Function],
                                                "onEntered": [Function],
                                                "onEntering": [Function],
                                                "onExit": [Function],
                                                "onExited": [Function],
                                                "onExiting": [Function],
                                                "tag": "div",
                                                "timeout": 150,
                                                "unmountOnExit": true,
                                              }
                                            }
                                          >
                                            <Fade
                                              appear={true}
                                              baseClass="fade"
                                              baseClassActive="show"
                                              className="alert alert-info"
                                              enter={true}
                                              exit={true}
                                              in={true}
                                              mountOnEnter={false}
                                              onEnter={[Function]}
                                              onEntered={[Function]}
                                              onEntering={[Function]}
                                              onExit={[Function]}
                                              onExited={[Function]}
                                              onExiting={[Function]}
                                              role="alert"
                                              tag="div"
                                              timeout={150}
                                              unmountOnExit={true}
                                            >
                                              <Transition
                                                appear={true}
                                                enter={true}
                                                exit={true}
                                                in={true}
                                                mountOnEnter={false}
                                                onEnter={[Function]}
                                                onEntered={[Function]}
                                                onEntering={[Function]}
                                                onExit={[Function]}
                                                onExited={[Function]}
                                                onExiting={[Function]}
                                                timeout={150}
                                                unmountOnExit={true}
                                              >
                                                <div
                                                  className="alert alert-info fade"
                                                  role="alert"
                                                >
                                                  Repositories not found, create a new one.
                                                </div>
                                              </Transition>
                                            </Fade>
                                          </Alert>
                                        </div>
                                      </Col>
                                    </Else>
                                  </If>
                                </div>
                              </Row>
                            </div>
                          </Repository>
                        </div>
                      </Col>
                    </div>
                  </Row>
                </div>
              </div>
            </Home>
          </Route>
        </Switch>
      </Router>
    </HashRouter>
  </Routes>
</Provider>
`;
